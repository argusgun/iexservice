package com.iex.iexservice.DAO;

import com.iex.iexservice.entities.QuoteDto;
import lombok.Data;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

@Document(collection = "quote")
@Data
public class QuoteEntity {
    @Id
    private String symbol;
    private String companyName;
    private String primaryExchange;
    private String calculationPrice;
    private Double open;
    private Long openTime;
    private String openSource;
    private Double close;
    private Long closeTime;
    private String closeSource;
    private Double high;
    private Long highTime;
    private String highSource;
    private Double low;
    private Long lowTime;
    private String lowSource;
    private Double latestPrice;
    private String latestSource;
    private String latestTime;
    private Long latestUpdate;
    private Long latestVolume;
    private Double iexRealtimePrice;
    private Long iexRealtimeSize;
    private Long iexLastUpdated;
    private Double delayedPrice;
    private Long delayedPriceTime;
    private Double oddLotDelayedPrice;
    private Long oddLotDelayedPriceTime;
    private Double extendedPrice;
    private Double extendedChange;
    private Double extendedChangePercent;
    private Long extendedPriceTime;
    private Double previousClose;
    private Long previousVolume;
    private Double change;
    private Double changePercent;
    private Long volume;
    private Double iexMarketPercent;
    private Long iexVolume;
    private Long avgTotalVolume;
    private Double iexBidPrice;
    private Long iexBidSize;
    private Double iexAskPrice;
    private Long iexAskSize;
    private Double iexOpen;
    private Long iexOpenTime;
    private Double iexClose;
    private Long iexCloseTime;
    private Long marketCap;
    private Double peRatio;
    private Double week52High;
    private Double week52Low;
    private Double ytdChange;
    private Long lastTradeTime;
    private String currency;
    private boolean isUSMarketOpen;

    public static QuoteEntity fromDtoToEntity(QuoteDto quoteDto){
        QuoteEntity entity =new QuoteEntity();
        entity.symbol = quoteDto.getSymbol();
        entity.companyName = quoteDto.getCompanyName();
        entity.primaryExchange = quoteDto.getPrimaryExchange();
        entity.calculationPrice = quoteDto.getCalculationPrice();
        entity.open = quoteDto.getOpen();
        entity.openTime = quoteDto.getOpenTime();
        entity.openSource = quoteDto.getOpenSource();
        entity.close = quoteDto.getClose();
        entity.closeTime = quoteDto.getCloseTime();
        entity.closeSource = quoteDto.getCloseSource();
        entity.high = quoteDto.getHigh();
        entity.highTime = quoteDto.getHighTime();
        entity.highSource = quoteDto.getHighSource();
        entity.low = quoteDto.getLow();
        entity.lowTime = quoteDto.getLowTime();
        entity.lowSource = quoteDto.getLowSource();
        entity.latestPrice = quoteDto.getLatestPrice();
        entity.latestSource = quoteDto.getLatestSource();
        entity.latestTime = quoteDto.getLatestTime();
        entity.latestUpdate = quoteDto.getLatestUpdate();
        entity.latestVolume = quoteDto.getLatestVolume();
        entity.iexRealtimePrice = quoteDto.getIexRealtimePrice();
        entity.iexRealtimeSize = quoteDto.getIexRealtimeSize();
        entity.iexLastUpdated = quoteDto.getIexLastUpdated();
        entity.delayedPrice = quoteDto.getDelayedPrice();
        entity.delayedPriceTime = quoteDto.getDelayedPriceTime();
        entity.oddLotDelayedPrice = quoteDto.getOddLotDelayedPrice();
        entity.oddLotDelayedPriceTime = quoteDto.getOddLotDelayedPriceTime();
        entity.extendedPrice = quoteDto.getExtendedPrice();
        entity.extendedChange = quoteDto.getExtendedChange();
        entity.extendedChangePercent = quoteDto.getExtendedChangePercent();
        entity.extendedPriceTime = quoteDto.getExtendedPriceTime();
        entity.previousClose = quoteDto.getPreviousClose();
        entity.previousVolume = quoteDto.getPreviousVolume();
        entity.change = quoteDto.getChange();
        entity.changePercent = quoteDto.getChangePercent();
        entity.volume = quoteDto.getVolume();
        entity.iexMarketPercent = quoteDto.getIexMarketPercent();
        entity.iexVolume = quoteDto.getIexVolume();
        entity.avgTotalVolume = quoteDto.getAvgTotalVolume();
        entity.iexBidPrice = quoteDto.getIexBidPrice();
        entity.iexBidSize = quoteDto.getIexBidSize();
        entity.iexAskPrice = quoteDto.getIexAskPrice();
        entity.iexAskSize = quoteDto.getIexAskSize();
        entity.iexOpen = quoteDto.getIexOpen();
        entity.iexOpenTime = quoteDto.getIexOpenTime();
        entity.iexClose = quoteDto.getIexClose();
        entity.iexCloseTime = quoteDto.getIexCloseTime();
        entity.marketCap = quoteDto.getMarketCap();
        entity.peRatio = quoteDto.getPeRatio();
        entity.week52High = quoteDto.getWeek52High();
        entity.week52Low = quoteDto.getWeek52Low();
        entity.ytdChange = quoteDto.getYtdChange();
        entity.lastTradeTime = quoteDto.getLastTradeTime();
        entity.currency = quoteDto.getCurrency();
        entity.isUSMarketOpen = quoteDto.isUSMarketOpen();
        return entity;
    }

    public QuoteDto toDto(){
        QuoteDto quoteDto = new QuoteDto();
        quoteDto.setSymbol(getSymbol());
        quoteDto.setCompanyName(getCompanyName());
        quoteDto.setPrimaryExchange(getPrimaryExchange());
        quoteDto.setCalculationPrice(getCalculationPrice());
        quoteDto.setOpen(getOpen());
        quoteDto.setOpenTime(getOpenTime());
        quoteDto.setOpenSource(getOpenSource());
        quoteDto.setClose(getClose());
        quoteDto.setCloseTime(getCloseTime());
        quoteDto.setCloseSource(getCloseSource());
        quoteDto.setHigh(getHigh());
        quoteDto.setHighTime(getHighTime());
        quoteDto.setHighSource(getHighSource());
        quoteDto.setLow(getLow());
        quoteDto.setLowTime(getLowTime());
        quoteDto.setLowSource(getLowSource());
        quoteDto.setLatestPrice(getLatestPrice());
        quoteDto.setLatestSource(getLatestSource());
        quoteDto.setLatestTime(getLatestTime());
        quoteDto.setLatestUpdate(getLatestUpdate());
        quoteDto.setLatestVolume(getLatestVolume());
        quoteDto.setIexRealtimePrice(getIexRealtimePrice());
        quoteDto.setIexRealtimeSize(getIexRealtimeSize());
        quoteDto.setIexLastUpdated(getIexLastUpdated());
        quoteDto.setDelayedPrice(getDelayedPrice());
        quoteDto.setDelayedPriceTime(getDelayedPriceTime());
        quoteDto.setOddLotDelayedPrice(getOddLotDelayedPrice());
        quoteDto.setOddLotDelayedPriceTime(getOddLotDelayedPriceTime());
        quoteDto.setExtendedPrice(getExtendedPrice());
        quoteDto.setExtendedChange(getExtendedChange());
        quoteDto.setExtendedChangePercent(getExtendedChangePercent());
        quoteDto.setExtendedPriceTime(getExtendedPriceTime());
        quoteDto.setPreviousClose(getPreviousClose());
        quoteDto.setPreviousVolume(getPreviousVolume());
        quoteDto.setChange(getChange());
        quoteDto.setChangePercent(getChangePercent());
        quoteDto.setVolume(getVolume());
        quoteDto.setIexMarketPercent(getIexMarketPercent());
        quoteDto.setIexVolume(getIexVolume());
        quoteDto.setAvgTotalVolume(getAvgTotalVolume());
        quoteDto.setIexBidPrice(getIexBidPrice());
        quoteDto.setIexBidSize(getIexBidSize());
        quoteDto.setIexAskPrice(getIexAskPrice());
        quoteDto.setIexAskSize(getIexAskSize());
        quoteDto.setIexOpen(getIexOpen());
        quoteDto.setIexOpenTime(getIexOpenTime());
        quoteDto.setIexClose(getIexClose());
        quoteDto.setIexCloseTime(getIexCloseTime());
        quoteDto.setMarketCap(getMarketCap());
        quoteDto.setPeRatio(getPeRatio());
        quoteDto.setWeek52High(getWeek52High());
        quoteDto.setWeek52Low(getWeek52Low());
        quoteDto.setYtdChange(getYtdChange());
        quoteDto.setLastTradeTime(getLastTradeTime());
        quoteDto.setCurrency(getCurrency());
        quoteDto.setUSMarketOpen(isUSMarketOpen());
        return quoteDto;
    }
}
